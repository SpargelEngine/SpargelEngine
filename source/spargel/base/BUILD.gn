source_set("base") {
    sources = [
        "allocator.cpp",
        "console.cpp",
        "deflate.cpp",
        "format.cpp",
        "panic.cpp",
        "platform.cpp",
        "string.cpp",
        "trace.cpp",
    ]
    public = [
        "algorithm.h",
        "allocator.h",
        "attribute.h",
        "backtrace.h",
        "bit_cast.h",
        "check.h",
        "checked_convert.h",
        "command_line.h",
        "compiler.h",
        "concept.h",
        "console.h",
        "coroutine.h",
        "deflate.h",
        "either.h",
        "enum.h",
        "functional.h",
        "hash.h",
        "hash_map.h",
        "inline_array.h",
        "intrinsic.h",
        "limits.h",
        "meta.h",
        "object.h",
        "optional.h",
        "panic.h",
        "platform.h",
        "ref_ptr.h",
        "result.h",
        "source_location.h",
        "span.h",
        "string.h",
        "string_view.h",
        "tagged_union.h",
        "trace.h",
        "tuple.h",
        "type_list.h",
        "types.h",
        "unique_ptr.h",
        "vector.h",
    ]

    deps = [
        "//source/spargel:config",
    ]

    if (is_macos) {
        sources += [
            "platform_mac.cpp",
        ]
    }
    if (is_windows) {
        sources += [
            "platform_win.cpp",
        ]
    }
}

source_set("test_main") {
    public = [
        "test.h",
    ]
    sources = [
        "test.cpp",
        "test_main.cpp",
    ]
    deps = [
        ":base",
    ]
}

executable("base_tests") {
    sources = [
        "allocator_tests.cpp",
        "array_storage_test.cpp",
        "checked_convert_tests.cpp",
        "either_test.cpp",
        "format_tests.cpp",
        "functional_test.cpp",
        "hash_map_test.cpp",
        "hash_test.cpp",
        "inline_array_test.cpp",
        "meta_test.cpp",
        "optional_test.cpp",
        "ref_ptr_tests.cpp",
        "string_test.cpp",
        "string_view_test.cpp",
        "sum_type_test.cpp",
        "tagged_union_test.cpp",
        "tuple_test.cpp",
        "vector_test.cpp",
    ]

    deps = [
        ":base",
        ":test_main",

        # TODO
        "//source/spargel/logging",
    ]
}
