action("glslang_build_info") {
  script = "repo/build_info.py"

  src_dir = "repo"
  changes_file = "repo/CHANGES.md"
  template_file = "repo/build_info.h.tmpl"
  out_file = "${target_gen_dir}/include/glslang/build_info.h"

  inputs = [
    changes_file,
    script,
    template_file,
  ]
  outputs = [ out_file ]
  args = [
    rebase_path(src_dir, root_build_dir),
    "-i",
    rebase_path(template_file, root_build_dir),
    "-o",
    rebase_path(out_file, root_build_dir),
  ]
}

action("glslang_extension_headers") {
  script = "repo/gen_extension_headers.py"

  out_file = "${target_gen_dir}/include/glslang/glsl_intrinsic_header.h"

  sources = [
    "repo/glslang/ExtensionHeaders/GL_EXT_shader_realtime_clock.glsl",
  ]

  inputs = [
    script
  ]
  outputs = [ out_file ]
  args = [
    "-i",
    rebase_path("glslang/ExtensionHeaders", root_build_dir),
    "-o",
    rebase_path(out_file, root_build_dir),
  ]
}

executable("glslang") {
  sources = [
    "repo/SPIRV/GLSL.ext.AMD.h",
    "repo/SPIRV/GLSL.ext.EXT.h",
    "repo/SPIRV/GLSL.ext.KHR.h",
    "repo/SPIRV/GLSL.ext.NV.h",
    "repo/SPIRV/GLSL.ext.ARM.h",
    "repo/SPIRV/GLSL.ext.QCOM.h",
    "repo/SPIRV/GLSL.std.450.h",
    "repo/SPIRV/GlslangToSpv.cpp",
    "repo/SPIRV/GlslangToSpv.h",
    "repo/SPIRV/InReadableOrder.cpp",
    "repo/SPIRV/Logger.cpp",
    "repo/SPIRV/Logger.h",
    "repo/SPIRV/NonSemanticDebugPrintf.h",
    "repo/SPIRV/NonSemanticShaderDebugInfo100.h",
    "repo/SPIRV/SPVRemapper.cpp",
    "repo/SPIRV/SPVRemapper.h",
    "repo/SPIRV/SpvBuilder.cpp",
    "repo/SPIRV/SpvBuilder.h",
    "repo/SPIRV/SpvPostProcess.cpp",
    "repo/SPIRV/SpvTools.h",
    "repo/SPIRV/bitutils.h",
    "repo/SPIRV/disassemble.cpp",
    "repo/SPIRV/disassemble.h",
    "repo/SPIRV/doc.cpp",
    "repo/SPIRV/doc.h",
    "repo/SPIRV/hex_float.h",
    "repo/SPIRV/spirv.hpp",
    "repo/SPIRV/spvIR.h",
    "repo/glslang/GenericCodeGen/CodeGen.cpp",
    "repo/glslang/GenericCodeGen/Link.cpp",
    "repo/glslang/Include/BaseTypes.h",
    "repo/glslang/Include/Common.h",
    "repo/glslang/Include/ConstantUnion.h",
    "repo/glslang/Include/InfoSink.h",
    "repo/glslang/Include/InitializeGlobals.h",
    "repo/glslang/Include/PoolAlloc.h",
    "repo/glslang/Include/ResourceLimits.h",
    "repo/glslang/Include/ShHandle.h",
    "repo/glslang/Include/SpirvIntrinsics.h",
    "repo/glslang/Include/Types.h",
    "repo/glslang/Include/arrays.h",
    "repo/glslang/Include/intermediate.h",
    "repo/glslang/Include/visibility.h",
    "repo/glslang/MachineIndependent/Constant.cpp",
    "repo/glslang/MachineIndependent/InfoSink.cpp",
    "repo/glslang/MachineIndependent/Initialize.cpp",
    "repo/glslang/MachineIndependent/Initialize.h",
    "repo/glslang/MachineIndependent/IntermTraverse.cpp",
    "repo/glslang/MachineIndependent/Intermediate.cpp",
    "repo/glslang/MachineIndependent/LiveTraverser.h",
    "repo/glslang/MachineIndependent/ParseContextBase.cpp",
    "repo/glslang/MachineIndependent/ParseHelper.cpp",
    "repo/glslang/MachineIndependent/ParseHelper.h",
    "repo/glslang/MachineIndependent/PoolAlloc.cpp",
    "repo/glslang/MachineIndependent/RemoveTree.cpp",
    "repo/glslang/MachineIndependent/RemoveTree.h",
    "repo/glslang/MachineIndependent/Scan.cpp",
    "repo/glslang/MachineIndependent/Scan.h",
    "repo/glslang/MachineIndependent/ScanContext.h",
    "repo/glslang/MachineIndependent/ShaderLang.cpp",
    "repo/glslang/MachineIndependent/SpirvIntrinsics.cpp",
    "repo/glslang/MachineIndependent/SymbolTable.cpp",
    "repo/glslang/MachineIndependent/SymbolTable.h",
    "repo/glslang/MachineIndependent/Versions.cpp",
    "repo/glslang/MachineIndependent/Versions.h",
    "repo/glslang/MachineIndependent/attribute.cpp",
    "repo/glslang/MachineIndependent/attribute.h",
    "repo/glslang/MachineIndependent/gl_types.h",
    "repo/glslang/MachineIndependent/glslang_tab.cpp",
    "repo/glslang/MachineIndependent/glslang_tab.cpp.h",
    "repo/glslang/MachineIndependent/intermOut.cpp",
    "repo/glslang/MachineIndependent/iomapper.cpp",
    "repo/glslang/MachineIndependent/iomapper.h",
    "repo/glslang/MachineIndependent/limits.cpp",
    "repo/glslang/MachineIndependent/linkValidate.cpp",
    "repo/glslang/MachineIndependent/localintermediate.h",
    "repo/glslang/MachineIndependent/parseConst.cpp",
    "repo/glslang/MachineIndependent/parseVersions.h",
    "repo/glslang/MachineIndependent/preprocessor/Pp.cpp",
    "repo/glslang/MachineIndependent/preprocessor/PpAtom.cpp",
    "repo/glslang/MachineIndependent/preprocessor/PpContext.cpp",
    "repo/glslang/MachineIndependent/preprocessor/PpContext.h",
    "repo/glslang/MachineIndependent/preprocessor/PpScanner.cpp",
    "repo/glslang/MachineIndependent/preprocessor/PpTokens.cpp",
    "repo/glslang/MachineIndependent/preprocessor/PpTokens.h",
    "repo/glslang/MachineIndependent/propagateNoContraction.cpp",
    "repo/glslang/MachineIndependent/propagateNoContraction.h",
    "repo/glslang/MachineIndependent/reflection.cpp",
    "repo/glslang/MachineIndependent/reflection.h",
    "repo/glslang/OSDependent/osinclude.h",
    "repo/glslang/Public/ShaderLang.h",

    "repo/glslang/HLSL/hlslParseHelper.h",
    "repo/glslang/HLSL/hlslParseables.h",
    "repo/glslang/HLSL/hlslScanContext.h",
    "repo/glslang/HLSL/hlslTokens.h",

    "repo/glslang/HLSL/hlslAttributes.cpp",
    "repo/glslang/HLSL/hlslAttributes.h",
    "repo/glslang/HLSL/hlslGrammar.cpp",
    "repo/glslang/HLSL/hlslGrammar.h",
    "repo/glslang/HLSL/hlslOpMap.cpp",
    "repo/glslang/HLSL/hlslOpMap.h",
    "repo/glslang/HLSL/hlslParseHelper.cpp",
    "repo/glslang/HLSL/hlslParseables.cpp",
    "repo/glslang/HLSL/hlslScanContext.cpp",
    "repo/glslang/HLSL/hlslTokenStream.cpp",
    "repo/glslang/HLSL/hlslTokenStream.h",

    "repo/SPIRV/SpvTools.cpp",


    "repo/StandAlone/DirStackFileIncluder.h",
    "repo/StandAlone/StandAlone.cpp",

    "repo/glslang/ResourceLimits/ResourceLimits.cpp",
    "repo/glslang/Public/ResourceLimits.h",
    "repo/glslang/Include/ResourceLimits.h",
    "repo/glslang/Include/visibility.h",
  ]
  defines = [
    "ENABLE_HLSL=1",
    "ENABLE_SPIRV=1",
    "ENABLE_OPT=1",
  ]

  if (is_windows) {
    sources += [ "repo/glslang/OSDependent/Windows/ossource.cpp" ]
    defines += [ "GLSLANG_OSINCLUDE_WIN32" ]
  } else {
    sources += [ "repo/glslang/OSDependent/Unix/ossource.cpp" ]
    defines += [ "GLSLANG_OSINCLUDE_UNIX" ]
  }

  include_dirs = [
    "repo",
    "${target_gen_dir}/include",
  ]

  deps = [
    "//third_party/spirv_tools:spirv_tools_opt",
    "//third_party/spirv_tools:spirv_tools_val",
    ":glslang_build_info",
    ":glslang_extension_headers",
  ]
}
