import("//build/config/sysroot.gni")

config("basic") {
  cflags = []
  cflags_c = []
  cflags_cc = []
  ldflags = []

  if (!is_msvc)  {
    cflags += [ "-fcolor-diagnostics" ]
    ldflags += [
      "-fuse-ld=lld",
      "-Wl,--color-diagnostics",
    ]
  }
}

config("debug") {
}

config("default_include_dirs") {
  include_dirs = [
    "//",
    root_gen_dir,
  ]
}

config("default_optimizations") {
  if (is_msvc) {
    cflags = [ "/Od" ]
  } else {
    cflags = [ "-O0" ]
  }
}

config("default_standard") {
  if (is_msvc) {
    cflags_c = [ "/std:c11" ]
    cflags_cc = [ "/std:c++20" ]
  } else {
    cflags_c = [ "-std=c11" ]
    cflags_cc = [ "-std=c++20" ]
    cflags_objc = [ "-std=c11" ]
    cflags_objcc = [ "-std=c++20" ]
  }
}

config("default_symbols") {
  if (is_msvc) {

  } else {
    cflags = [ "-g0" ]
  }
}

config("no_exceptions") {
  if (is_msvc) {
    defines = [ "_HAS_EXCEPTIONS=0" ]
  } else {
    cflags_cc = [ "-fno-exceptions" ]
    cflags_objcc = [ "-fno-exceptions" ]
  }
}

config("no_rtti") {
  if (is_msvc) {
    cflags_cc = [ "/GR-" ]
  } else {
    cflags_cc = [ "-fno-rtti" ]
    cflags_objcc = [ "-fno-rtti" ]
  }
}

config("sysroot") {
  if (is_linux || is_macos) {
    sysroot_flags = [
      "-isysroot",
      rebase_path(sysroot, root_build_dir),
    ]
    cflags = sysroot_flags
    ldflags = sysroot_flags
  }
}

config("no_deprecation_warning") {
  if (!is_msvc) {
    cflags = [ "-Wno-deprecated-declarations" ]
  }
}

config("default_warning") {
  if (!is_msvc) {
    cflags = [ "-Wall" ]
  }
}

config("default_libs") {
  libs = [
    "user32.lib",
    "kernel32.lib",
    "gdi32.lib",
    "shell32.lib",
  ]
}